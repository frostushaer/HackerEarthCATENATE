@startuml
set namespaceSeparator ::

class "chatapp_test1::generated::intl::messages_hi.dart::MessageLookup" {
  +Map<String, dynamic> messages
  +String localeName
  {static} -Map<String, Function> _notInlinedMessages()
}

"intl::message_lookup_by_library.dart::MessageLookupByLibrary" <|-- "chatapp_test1::generated::intl::messages_hi.dart::MessageLookup"

class "chatapp_test1::generated::intl::messages_en.dart::MessageLookup" {
  +Map<String, dynamic> messages
  +String localeName
  {static} -Map<String, Function> _notInlinedMessages()
}

"intl::message_lookup_by_library.dart::MessageLookupByLibrary" <|-- "chatapp_test1::generated::intl::messages_en.dart::MessageLookup"

class "chatapp_test1::generated::l10n.dart::S" {
  {static} -S? _current
  {static} +AppLocalizationDelegate delegate
  {static} +S current
  +String appTitle
  +String loginSlogan
  +String Email
  +String EmailValidation
  +String Password
  +String PasswordValidation
  +String SignIn
  +String DontHaveAccount
  +String RegisterHere
  +String registerSlogan
  +String fullName
  +String nameValidation
  +String register
  +String haveAccount
  +String loginNow
  +String groups
  +String profile
  +String logout
  +String reallyLogout
  +String chooseLanguage
  +String langChanged
  +String language
  +String createAGroup
  +String cancle
  +String groupCreated
  +String create
  +String createGroupDesc
  +String search
  +String searchGroups
  +String groupJoined
  +String groupLeft
  +String joined
  +String joinNow
  +String displayAdmin
  +String groupInfo
  +String exit
  +String exitText
  +String groupTileSubTitle
  {static} +Future<S> load()
  {static} +S of()
  {static} +S? maybeOf()
}

"chatapp_test1::generated::l10n.dart::S" o-- "chatapp_test1::generated::l10n.dart::S"
"chatapp_test1::generated::l10n.dart::S" o-- "chatapp_test1::generated::l10n.dart::AppLocalizationDelegate"

class "chatapp_test1::generated::l10n.dart::AppLocalizationDelegate" {
  +List<Locale> supportedLocales
  +bool isSupported()
  +Future<S> load()
  +bool shouldReload()
  -bool _isSupported()
}

"flutter::src::widgets::localizations.dart::LocalizationsDelegate" <|-- "chatapp_test1::generated::l10n.dart::AppLocalizationDelegate"

class "chatapp_test1::fade_anime.dart::FadeAnimation" {
  +double delay
  +Widget child
  +Widget build()
}

"chatapp_test1::fade_anime.dart::FadeAnimation" o-- "flutter::src::widgets::framework.dart::Widget"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "chatapp_test1::fade_anime.dart::FadeAnimation"

class "chatapp_test1::LanguageChangeProvider.dart::LanguageChangeProvider" {
  -Locale _currentLocale
  +Locale currentLocale
  +void changeLocale()
}

"chatapp_test1::LanguageChangeProvider.dart::LanguageChangeProvider" o-- "dart::ui::Locale"
"flutter::src::foundation::change_notifier.dart::ChangeNotifier" <|-- "chatapp_test1::LanguageChangeProvider.dart::LanguageChangeProvider"

class "chatapp_test1::shared::constants.dart::Constants" {
  {static} +String appId
  {static} +String apiKey
  {static} +String messagingSenderId
  {static} +String projectId
  +Color primaryColor
}

"chatapp_test1::shared::constants.dart::Constants" o-- "dart::ui::Color"

class "chatapp_test1::main.dart::MyApp" {
  +State<MyApp> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "chatapp_test1::main.dart::MyApp"

class "chatapp_test1::main.dart::_MyAppState" {
  -bool _isSignedIn
  -bool _isOrg
  +void initState()
  +dynamic getUserLoggedInStatus()
  +dynamic getUserType()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "chatapp_test1::main.dart::_MyAppState"

class "chatapp_test1::service::database_service.dart::DatabaseService" {
  +String? oid
  +String? uid
  +String? cid
  +String? sid
  +CollectionReference<Object?> orgCollection
  +CollectionReference<Object?> userCollection
  +CollectionReference<Object?> groupCollection
  +CollectionReference<Object?> courseCollection
  +CollectionReference<Object?> staffCollection
  +Future<dynamic> savingUserData()
  +Future<dynamic> gettingUserData()
  +dynamic getUserGroups()
  +Future<dynamic> savingOrgData()
  +Future<dynamic> gettingOrgData()
  +dynamic getOrgCourse()
  +dynamic getOrgStaff()
  +Future<dynamic> savingCourseData()
  +Future<dynamic> gettingCourseData()
  +dynamic getCourseBatch()
  +Future<dynamic> savingStaffData()
  +Future<dynamic> gettingStaffData()
  +dynamic getStaffBatch()
  +Future<dynamic> createGroup()
  +dynamic getChats()
  +Future<dynamic> getGroupAdmin()
  +dynamic getGroupMembers()
  +dynamic searchByName()
  +Future<bool> isUserJoined()
  +Future<dynamic> toggleGroupJoin()
  +dynamic sendMessage()
}

"chatapp_test1::service::database_service.dart::DatabaseService" o-- "cloud_firestore::cloud_firestore.dart::CollectionReference<Object>"

class "chatapp_test1::service::auth_service.dart::AuthService" {
  +FirebaseAuth firebaseAuth
  +Future<dynamic> loginWithUserNameandPassword()
  +Future<dynamic> registerUserWithEmailandPassword()
  +Future<dynamic> registerOrgWithEmailandPassword()
  +Future<dynamic> signOut()
}

"chatapp_test1::service::auth_service.dart::AuthService" o-- "firebase_auth::firebase_auth.dart::FirebaseAuth"

class "chatapp_test1::pages::chat_page.dart::ChatPage" {
  +String groupId
  +String groupName
  +String userName
  +State<ChatPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "chatapp_test1::pages::chat_page.dart::ChatPage"

class "chatapp_test1::pages::chat_page.dart::_ChatPageState" {
  +Stream<QuerySnapshot<Object?>>? chats
  +TextEditingController messageController
  +String admin
  +void initState()
  +dynamic getChatandAdmin()
  +Widget build()
  +dynamic chatMessages()
  +dynamic sendMessage()
}

"chatapp_test1::pages::chat_page.dart::_ChatPageState" o-- "dart::async::Stream<QuerySnapshot<Object>>"
"chatapp_test1::pages::chat_page.dart::_ChatPageState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"flutter::src::widgets::framework.dart::State" <|-- "chatapp_test1::pages::chat_page.dart::_ChatPageState"

class "chatapp_test1::pages::auth::register_page.dart::RegisterPage" {
  +State<RegisterPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "chatapp_test1::pages::auth::register_page.dart::RegisterPage"

class "chatapp_test1::pages::auth::register_page.dart::_RegisterPageState" {
  -bool _isLoading
  +GlobalKey<FormState> formKey
  +String email
  +String password
  +String fullName
  +String orgName
  +AuthService authService
  +Widget build()
  +dynamic register()
}

"chatapp_test1::pages::auth::register_page.dart::_RegisterPageState" o-- "flutter::src::widgets::framework.dart::GlobalKey<FormState>"
"chatapp_test1::pages::auth::register_page.dart::_RegisterPageState" o-- "chatapp_test1::service::auth_service.dart::AuthService"
"flutter::src::widgets::framework.dart::State" <|-- "chatapp_test1::pages::auth::register_page.dart::_RegisterPageState"

class "chatapp_test1::pages::auth::org_login_page.dart::OrgLoginPage" {
  +State<OrgLoginPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "chatapp_test1::pages::auth::org_login_page.dart::OrgLoginPage"

class "chatapp_test1::pages::auth::org_login_page.dart::_OrgLoginPageState" {
  +GlobalKey<FormState> formKey
  +String email
  +String password
  -bool _isLoading
  +AuthService authService
  +List<dynamic> locale
  +Widget build()
  +dynamic login()
}

"chatapp_test1::pages::auth::org_login_page.dart::_OrgLoginPageState" o-- "flutter::src::widgets::framework.dart::GlobalKey<FormState>"
"chatapp_test1::pages::auth::org_login_page.dart::_OrgLoginPageState" o-- "chatapp_test1::service::auth_service.dart::AuthService"
"flutter::src::widgets::framework.dart::State" <|-- "chatapp_test1::pages::auth::org_login_page.dart::_OrgLoginPageState"

class "chatapp_test1::pages::auth::org_register_page.dart::OrgRegisterPage" {
  +State<OrgRegisterPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "chatapp_test1::pages::auth::org_register_page.dart::OrgRegisterPage"

class "chatapp_test1::pages::auth::org_register_page.dart::_OrgRegisterPageState" {
  -bool _isLoading
  +GlobalKey<FormState> formKey
  +String email
  +String password
  +String fullName
  +String orgName
  +AuthService authService
  +Widget build()
  +dynamic register()
}

"chatapp_test1::pages::auth::org_register_page.dart::_OrgRegisterPageState" o-- "flutter::src::widgets::framework.dart::GlobalKey<FormState>"
"chatapp_test1::pages::auth::org_register_page.dart::_OrgRegisterPageState" o-- "chatapp_test1::service::auth_service.dart::AuthService"
"flutter::src::widgets::framework.dart::State" <|-- "chatapp_test1::pages::auth::org_register_page.dart::_OrgRegisterPageState"

class "chatapp_test1::pages::auth::login_page.dart::LoginPage" {
  +State<LoginPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "chatapp_test1::pages::auth::login_page.dart::LoginPage"

class "chatapp_test1::pages::auth::login_page.dart::_LoginPageState" {
  +GlobalKey<FormState> formKey
  +String email
  +String password
  -bool _isLoading
  +AuthService authService
  +List<dynamic> locale
  +Widget build()
  +dynamic login()
}

"chatapp_test1::pages::auth::login_page.dart::_LoginPageState" o-- "flutter::src::widgets::framework.dart::GlobalKey<FormState>"
"chatapp_test1::pages::auth::login_page.dart::_LoginPageState" o-- "chatapp_test1::service::auth_service.dart::AuthService"
"flutter::src::widgets::framework.dart::State" <|-- "chatapp_test1::pages::auth::login_page.dart::_LoginPageState"

class "chatapp_test1::pages::group_info.dart::GroupInfo" {
  +String groupId
  +String groupName
  +String adminName
  +String userName
  +State<GroupInfo> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "chatapp_test1::pages::group_info.dart::GroupInfo"

class "chatapp_test1::pages::group_info.dart::_GroupInfoState" {
  +Stream<dynamic>? members
  +void initState()
  +dynamic getMembers()
  +String getName()
  +String getId()
  +Widget build()
  +dynamic memberList()
}

"chatapp_test1::pages::group_info.dart::_GroupInfoState" o-- "dart::async::Stream<dynamic>"
"flutter::src::widgets::framework.dart::State" <|-- "chatapp_test1::pages::group_info.dart::_GroupInfoState"

class "chatapp_test1::pages::org_pages::org_profile_page.dart::OrgProfilePage" {
  +String userName
  +String email
  +State<OrgProfilePage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "chatapp_test1::pages::org_pages::org_profile_page.dart::OrgProfilePage"

class "chatapp_test1::pages::org_pages::org_profile_page.dart::_OrgProfilePageState" {
  +AuthService authService
  +List<dynamic> locale
  +Widget build()
}

"chatapp_test1::pages::org_pages::org_profile_page.dart::_OrgProfilePageState" o-- "chatapp_test1::service::auth_service.dart::AuthService"
"flutter::src::widgets::framework.dart::State" <|-- "chatapp_test1::pages::org_pages::org_profile_page.dart::_OrgProfilePageState"

class "chatapp_test1::pages::org_pages::batch_page.dart::BatchPage" {
  +State<BatchPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "chatapp_test1::pages::org_pages::batch_page.dart::BatchPage"

class "chatapp_test1::pages::org_pages::batch_page.dart::_BatchPageState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "chatapp_test1::pages::org_pages::batch_page.dart::_BatchPageState"

class "chatapp_test1::pages::org_pages::course_page.dart::CoursePage" {
  +State<CoursePage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "chatapp_test1::pages::org_pages::course_page.dart::CoursePage"

class "chatapp_test1::pages::org_pages::course_page.dart::_CoursePageState" {
  +String userName
  +String email
  +AuthService authService
  +Stream<dynamic>? groups
  +Stream<dynamic>? courses
  -bool _isLoading
  +String groupName
  +String orgName
  +String courseName
  +List<dynamic> locale
  +void initState()
  +String getId()
  +String getName()
  +dynamic gettingUserData()
  +Widget build()
  +dynamic popUpDialog()
  +dynamic courseList()
  +dynamic noGroupWidget()
}

"chatapp_test1::pages::org_pages::course_page.dart::_CoursePageState" o-- "chatapp_test1::service::auth_service.dart::AuthService"
"chatapp_test1::pages::org_pages::course_page.dart::_CoursePageState" o-- "dart::async::Stream<dynamic>"
"flutter::src::widgets::framework.dart::State" <|-- "chatapp_test1::pages::org_pages::course_page.dart::_CoursePageState"

class "chatapp_test1::pages::org_pages::staff_page.dart::StaffPage" {
  +State<StaffPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "chatapp_test1::pages::org_pages::staff_page.dart::StaffPage"

class "chatapp_test1::pages::org_pages::staff_page.dart::_StaffPageState" {
  +String userName
  +String email
  +AuthService authService
  +Stream<dynamic>? groups
  +Stream<dynamic>? staffs
  -bool _isLoading
  +String groupName
  +String orgName
  +String courseName
  +String staffName
  +GlobalKey<FormState> formKey
  +String staffEmail
  +String staffPassword
  +List<dynamic> locale
  +void initState()
  +String getId()
  +String getName()
  +dynamic gettingUserData()
  +Widget build()
  +dynamic popUpDialog()
  +dynamic register()
  +dynamic staffList()
  +dynamic noGroupWidget()
}

"chatapp_test1::pages::org_pages::staff_page.dart::_StaffPageState" o-- "chatapp_test1::service::auth_service.dart::AuthService"
"chatapp_test1::pages::org_pages::staff_page.dart::_StaffPageState" o-- "dart::async::Stream<dynamic>"
"chatapp_test1::pages::org_pages::staff_page.dart::_StaffPageState" o-- "flutter::src::widgets::framework.dart::GlobalKey<FormState>"
"flutter::src::widgets::framework.dart::State" <|-- "chatapp_test1::pages::org_pages::staff_page.dart::_StaffPageState"

class "chatapp_test1::pages::home_page.dart::HomePage" {
  +State<HomePage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "chatapp_test1::pages::home_page.dart::HomePage"

class "chatapp_test1::pages::home_page.dart::_HomePageState" {
  +String userName
  +String email
  +AuthService authService
  +Stream<dynamic>? groups
  -bool _isLoading
  +String groupName
  +List<dynamic> locale
  +void initState()
  +String getId()
  +String getName()
  +dynamic gettingUserData()
  +Widget build()
  +dynamic popUpDialog()
  +dynamic groupList()
  +dynamic noGroupWidget()
}

"chatapp_test1::pages::home_page.dart::_HomePageState" o-- "chatapp_test1::service::auth_service.dart::AuthService"
"chatapp_test1::pages::home_page.dart::_HomePageState" o-- "dart::async::Stream<dynamic>"
"flutter::src::widgets::framework.dart::State" <|-- "chatapp_test1::pages::home_page.dart::_HomePageState"

class "chatapp_test1::pages::search_page.dart::SearchPage" {
  +State<SearchPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "chatapp_test1::pages::search_page.dart::SearchPage"

class "chatapp_test1::pages::search_page.dart::_SearchPageState" {
  +TextEditingController searchController
  +bool isLoading
  +QuerySnapshot<Object?>? searchSnapshot
  +bool hasUserSearched
  +String userName
  +bool isJoined
  +User? user
  +void initState()
  +dynamic getCurrentUserIdandName()
  +String getName()
  +String getId()
  +Widget build()
  +dynamic initiateSearchMethod()
  +dynamic groupList()
  +dynamic joinedOrNot()
  +Widget groupTile()
}

"chatapp_test1::pages::search_page.dart::_SearchPageState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"chatapp_test1::pages::search_page.dart::_SearchPageState" o-- "cloud_firestore::cloud_firestore.dart::QuerySnapshot<Object>"
"chatapp_test1::pages::search_page.dart::_SearchPageState" o-- "firebase_auth::firebase_auth.dart::User"
"flutter::src::widgets::framework.dart::State" <|-- "chatapp_test1::pages::search_page.dart::_SearchPageState"

class "chatapp_test1::pages::profile_page.dart::ProfilePage" {
  +String userName
  +String email
  +State<ProfilePage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "chatapp_test1::pages::profile_page.dart::ProfilePage"

class "chatapp_test1::pages::profile_page.dart::_ProfilePageState" {
  +AuthService authService
  +List<dynamic> locale
  +Widget build()
}

"chatapp_test1::pages::profile_page.dart::_ProfilePageState" o-- "chatapp_test1::service::auth_service.dart::AuthService"
"flutter::src::widgets::framework.dart::State" <|-- "chatapp_test1::pages::profile_page.dart::_ProfilePageState"

class "chatapp_test1::helper::helper_function.dart::HelperFunctions" {
  {static} +String userLoggedInKey
  {static} +String userNameKey
  {static} +String userEmailKey
  {static} +String userLanguageKey
  {static} +String userTypeKey
  {static} +Future<bool> saveUserLoggedInStatus()
  {static} +Future<bool> saveUserNameSF()
  {static} +Future<bool> saveUserEmailSF()
  {static} +Future<bool> saveUserType()
  {static} +Future<bool?> getUserLoggedInStatus()
  {static} +Future<bool?> getUserTypeStatus()
  {static} +Future<String?> getUserEmailFromSF()
  {static} +Future<String?> getUserNameFromSF()
}

class "chatapp_test1::widgets::group_tile.dart::GroupTile" {
  +String userName
  +String groupId
  +String groupName
  +State<GroupTile> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "chatapp_test1::widgets::group_tile.dart::GroupTile"

class "chatapp_test1::widgets::group_tile.dart::_GroupTileState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "chatapp_test1::widgets::group_tile.dart::_GroupTileState"

class "chatapp_test1::widgets::message_tile.dart::MessageTile" {
  +String message
  +String sender
  +bool sentByMe
  +State<MessageTile> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "chatapp_test1::widgets::message_tile.dart::MessageTile"

class "chatapp_test1::widgets::message_tile.dart::_MessageTileState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "chatapp_test1::widgets::message_tile.dart::_MessageTileState"

class "chatapp_test1::widgets::course_tile.dart::CourseTile" {
  +String adminName
  +String courseId
  +String courseName
  +State<CourseTile> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "chatapp_test1::widgets::course_tile.dart::CourseTile"

class "chatapp_test1::widgets::course_tile.dart::_CourseTileState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "chatapp_test1::widgets::course_tile.dart::_CourseTileState"

class "chatapp_test1::widgets::staff_tile.dart::StaffTile" {
  +String staffName
  +State<StaffTile> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "chatapp_test1::widgets::staff_tile.dart::StaffTile"

class "chatapp_test1::widgets::staff_tile.dart::_StaffTileState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "chatapp_test1::widgets::staff_tile.dart::_StaffTileState"


@enduml